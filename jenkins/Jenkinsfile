pipeline {
    agent {
        label 'DevServer'
    }
    parameters {
        choice choices: ['Development', 'Production'], description: 'User to select his target node selector. ', name: 'envNodeSelector'
    }
    options {
        skipStagesAfterUnstable()
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
            post {
                success {
                    dir ('target') {
                        stash includes: '*.jar', name: 'MyAppJar'
                    }
                }
            }
        }
        stage('Test') {
            parallel  {
                stage('Test on DevServer') {
                    agent { label "DevServer" }
                    steps {
                        sh 'mvn test'
                    }
                    post {
                        always {
                            junit 'target/surefire-reports/*.xml'
                        }
                    }
                }
                stage('Test on PodServer') {
                    agent  { label "DevServer" }
                    steps {
                        sh 'mvn test'
                    }
                    post {
                        always {
                            junit 'target/surefire-reports/*.xml'
                        }
                    }
                }
            }
        }
        stage('Deliver') { 
            when {
                expression { return params.envNodeSelector == 'Development' }
            }
            agent { label 'DevServer' }
            steps {
                dir ('/home/ubuntu/deployment') {
                    unstash 'MyAppJar'
                }
                sh """
                    cd /home/ubuntu/deployment
                    jar  -xvf simple-java-maven-app-1.0-SNAPSHOT.jar
                """
            }
        }   
    }
}